<project name="BauernhofPreset" default="default" basedir=".">
	<description>
		Ant Build File für das Preset für das APP Spiel im Sommersemester 2023.
	</description>
	

	<!-- global properties -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="doc" location="doc"/>
	<property name="lib" location="lib"/>
	<property name="graphics" location="graphics"/>
	<property name="config" location="config"/>

	<!-- determine preset.version -->
	<property environment="env"/>
	<exec outputproperty="git.branch" executable="git">
		<arg line="rev-parse"/>
		<arg line="--abbrev-ref"/>
		<arg line="HEAD"/>
	</exec>
	<condition property="ci.tag" value="${env.CI_COMMIT_TAG}">
		<isset property="env.CI_COMMIT_TAG" />
	</condition>
	<condition property="preset.version" value="${ci.tag}" else="${git.branch}">
		<isset property="ci.tag" />
	</condition>
	
	<!-- classpath -->
	<path id="build.classpath">
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>


	<target name="default" depends="init,build,doc" description="the default behaviour" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp prefix="preset">
			<format property="builddate" pattern="yyyy-MM-dd'T'HH_mm_ss.SSSZ" locale="de,DE"/>
		</tstamp>
		<!-- Create the build directory structure used by build -->
		<mkdir dir="${build}"/>
		<mkdir dir="${doc}"/>
	</target>

	<target name="build" depends="init" description="compile the source">
		<!-- Compile the Java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" classpathref="build.classpath" includeantruntime="false" debug="true" debuglevel="lines,vars,source">
			<compilerarg value="-Xlint:all"/>
		</javac>
		<!-- Include the graphics, as they are needed to be relative to the classes -->
		<copy todir="${build}/graphics">
			<fileset dir="${graphics}"/>
		</copy>
		<copy todir="${build}/config">
			<fileset dir="${config}"/>
		</copy>
		<echoproperties prefix="preset" destfile="${build}/preset.txt"/>
		<!-- Copy LICENSE -->
		<!--<copy file="./LICENSE" tofile="${build}/LICENSE.txt"/>-->
		<!--<copy todir="${build}">
			<fileset dir="${lib}" includes="**/*.txt"/>
		</copy>-->
		<!--<copy file="./logo.svg" tofile="${build}/logo.svg"/>-->
	</target>
	
	<target name="dist" depends="clean,init,build,doc" description="generate the distribution">
		<!-- Create the distribution directory for new releases -->
		<mkdir dir="${dist}"/>
		<jar jarfile="${dist}/Bauernhof-Preset-${preset.version}.jar" basedir="${build}">
			<!--<zipgroupfileset dir="lib" includes="**/*.jar" />-->
		</jar>
		<jar jarfile="${dist}/Bauernhof-Preset-${preset.version}-source.jar" basedir="${src}" />
		<jar jarfile="${dist}/Bauernhof-Preset-${preset.version}-javadoc.jar" basedir="${doc}" />     
		<copy todir="${dist}">
			<!--<fileset dir="${lib}"/>-->
			<fileset dir="${lib}" includes="**/*.txt"/>
		</copy>
		<!-- Copy jar files to "latest" release version -->
		<copy file="${dist}/Bauernhof-Preset-${preset.version}.jar"         tofile="${dist}/Bauernhof-Preset-latest.jar"        />
		<copy file="${dist}/Bauernhof-Preset-${preset.version}-source.jar"  tofile="${dist}/Bauernhof-Preset-latest-source.jar" />
		<copy file="${dist}/Bauernhof-Preset-${preset.version}-javadoc.jar" tofile="${dist}/Bauernhof-Preset-latest-javadoc.jar"/>
		<!-- Copy LICENSE -->
			<!--<copy file="./LICENSE" tofile="${dist}/Bauernhof-Preset-LICENSE.txt"/>-->
	</target>
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${doc} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${doc}"/>
		<!-- <delete dir="${dist}"/> -->
	</target>

	<!--<target name="test" depends="build" description="execute the Test Class">
		<exec executable="./run.sh" />
	</target>-->

	<target name="doc" depends="init" description="generate the documentation">
		<javadoc destdir="${doc}" verbose="false" author="true" version="true" use="true" public="true" access="public" sourcepath="${src}" excludepackagenames="bauernhof.preset.test" Overview="overview.html">
			<arg value="-Xdoclint:all"/>
			<classpath refid="build.classpath"/>
			<link href="https://app.pages.gwdg.de/sag/doc/"/>
			<link href="https://docs.oracle.com/en/java/javase/11/docs/api/"/>
			<!--<link href="https://docs.oracle.com/javase/7/docs/api/"/>-->
			<!--<link href="https://docs.oracle.com/javase/8/docs/api/" offline="true" packagelistURL="https://docs.oracle.com/javase/8/docs/api/" />-->
			<!--<link href="https://docs.oracle.com/javase/11/docs/api/" offline="true" packagelistURL="https://docs.oracle.com/javase/11/docs/api/package-list" />
			<link offline="true" href="https://docs.oracle.com/javase/11/docs/api/" packagelistLoc="path-containing-package-list"/>-->
			<!--<link offline="false" href="http://docs.oracle.com/javase/11/docs/api/" packagelistLoc="."/>-->
		</javadoc>
	</target>


</project>